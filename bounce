#!/bin/sh
set -o pipefail
trap exit TERM INT EXIT

echo creating ringbuffer fifos
# clear fifos from previous runs
rm -f {to,from}_{srv,cli}.{in,out}
# attend data in the queues
for x in {to,from}_{srv,cli}; do
	./ringfifo $x &
done

# wait for the .in and .out fifos to get created
# TODO: find a non-sleep way
sleep 1

while true
do
	echo connecting to server
	sh -c 'nc -c irc.libera.chat 6697 < to_srv.out | tee from_srv.log > from_srv.in' &
	server_pid=$!

	echo authenticating
	./irc_auth creds < from_srv.out | tee to_srv.log > to_srv.in
	if [ $? -ne 0 ]; then exit 1; fi

	echo open for client connections
	sh -c 'nc -l -k 3000 < to_cli.out | tee -a from_cli.log from_cli.in' &
	client_pid=$!

	echo running relay between pipes
	sh -c './irc_relay from_cli.in to_cli.out < from_srv.out | tee -a to_srv.log to_srv.in' &
	relay_pid=$!

	wait $server_pid

	kill $client_pid $relay_pid
done
